---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app stump
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      stump:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/aaronleopold/stump
              tag: 0.0.48@sha256:ba0c2cf7a8ee10c416765b1f709ae5c39c5b1904269d506ab5fee6048db91336
            env:
              TZ: "${TIMEZONE}"
              STUMP_CONFIG_DIR: /config
              STUMP_PORT: &port 80
    defaultPodOptions:
      hostname: *app
      securityContext:
        runAsUser: "${MEDIA_SECURITY_CONTEXT_RUN_AS_USER}"
        runAsGroup: "${MEDIA_SECURITY_CONTEXT_RUN_AS_GROUP}"
        fsGroup: "${MEDIA_SECURITY_CONTEXT_RUN_AS_GROUP}"
        fsGroupChangePolicy: "OnRootMismatch"
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/icon: mdi:book-multiple
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        storageClass: zfs-nfs
        globalMounts:
          - path: /config
        size: 1Gi
        accessMode: ReadWriteOnce
      books:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: "/warehouse/media/books"
            server: "${NFS_SERVER}"
        globalMounts:
          - path: /data
