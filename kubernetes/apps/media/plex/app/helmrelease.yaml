---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.4.7195-7c8f9d3b6@sha256:39c4ad71d92790d54b2d14be5fdabca940591ab2b9f8291d02653cd4f80d9d4f
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                cpu: 4
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
    service:
      app:
        controller: plex
        type: LoadBalancer
        ports:
          http:
            port: 32400
    defaultPodOptions:
      hostname: *app
      securityContext:
        runAsUser: "${MEDIA_SECURITY_CONTEXT_RUN_AS_USER}"
        runAsGroup: "${MEDIA_SECURITY_CONTEXT_RUN_AS_GROUP}"
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["frigate"]
              topologyKey: kubernetes.io/hostname
    persistence:
      config:
        enabled: true
        type: hostPath
        hostPath: /data/plex
        hostPathType: DirectoryOrCreate
      tv:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: "/warehouse/media/tv"
            server: "${NFS_SERVER}"
        globalMounts:
          - path: /tv
      movies:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: "/warehouse/media/movies"
            server: "${NFS_SERVER}"
        globalMounts:
          - path: /movies
      music:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: "/warehouse/media/music"
            server: "${NFS_SERVER}"
        globalMounts:
          - path: /music
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
    nodeSelector:
      fusionIO: "true"
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/icon: mdi:plex
          nginx.ingress.kubernetes.io/app-root: /web
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
