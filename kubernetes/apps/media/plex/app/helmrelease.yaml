---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.32.4.7195-7c8f9d3b6@sha256:39c4ad71d92790d54b2d14be5fdabca940591ab2b9f8291d02653cd4f80d9d4f
    env:
      TZ: "${TIMEZONE}"
    hostname: *app
    service:
      main:
        ports:
          http:
            port: 32400
    podSecurityContext:
      runAsUser: "${MEDIA_SECURITY_CONTEXT_RUN_AS_USER}"
      runAsGroup: "${MEDIA_SECURITY_CONTEXT_RUN_AS_GROUP}"
    persistence:
      config:
        enabled: true
        type: hostPath
        accessMode: ReadWriteOnce
        hostPath: /data/plex
        hostPathType: DirectoryOrCreate
        size: 10Gi
      metadata:
        enabled: true
        storageClass: zfs-nfs
        accessMode: ReadWriteOnce
        mountPath: /metadata
        size: 400Gi
      tv:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/tv
            server: ${NFS_SERVER}
        mountPath: /tv
      movies:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/movies
            server: ${NFS_SERVER}
        mountPath: /movies
      music:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/music
            server: ${NFS_SERVER}
        mountPath: /music
      transcode:
        enabled: true
        type: hostPath
        accessMode: ReadWriteOnce
        hostPath: /data/transcode
        hostPathType: DirectoryOrCreate
        size: 20Gi
    nodeSelector:
      fusionIO: "true"
    tolerations:
      - key: "fusionIO"
        operator: "Exists"
        effect: "PreferNoSchedule"
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/icon: mdi:plex
          nginx.ingress.kubernetes.io/app-root: /web
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
