---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.3.3@sha256:6614d759bbaa6884926c6aa75018339bd35cd1add0ff92c907087327dd470477
            env:
              TZ: "${TIMEZONE}"
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.default,
                sabnzbd.default.svc,
                sabnzbd.default.svc.cluster,
                sabnzbd.default.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    defaultPodOptions:
      securityContext:
        runAsUser: "${MEDIA_SECURITY_CONTEXT_RUN_AS_USER}"
        runAsGroup: "${MEDIA_SECURITY_CONTEXT_RUN_AS_GROUP}"
      hostname: *app
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/icon: mdi:download-circle
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        storageClass: zfs-nfs
        globalMounts:
          - path: /config
        size: 1Gi
        accessMode: ReadWriteOnce
      incomplete:
        enabled: true
        storageClass: zfs-nfs
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /incomplete
        size: 200Gi
      tv:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/tv
            server: ${NFS_SERVER}
        globalMounts:
          - path: /tv
      movies:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/movies
            server: ${NFS_SERVER}
        globalMounts:
          - path: /movies
      music:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/music
            server: ${NFS_SERVER}
        globalMounts:
          - path: /music
      books:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/books
            server: ${NFS_SERVER}
        globalMounts:
          - path: /books
