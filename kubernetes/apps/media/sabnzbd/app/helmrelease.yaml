---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/sabnzbd
      tag: 4.2.3@sha256:8943148a1ac5d6cc91d2cc2aa0cae4f0ab3af49fb00ca2d599fbf0344798bc37
    env:
      TZ: "${TIMEZONE}"
      SABNZBD__PORT: &port 80
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd,
        sabnzbd.default,
        sabnzbd.default.svc,
        sabnzbd.default.svc.cluster,
        sabnzbd.default.svc.cluster.local,
        sabnzbd.${SECRET_DOMAIN}
    hostname: *app
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api?mode=version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: "${MEDIA_SECURITY_CONTEXT_RUN_AS_USER}"
      runAsGroup: "${MEDIA_SECURITY_CONTEXT_RUN_AS_GROUP}"
    persistence:
      config:
        enabled: true
        storageClass: zfs-nfs
        mountPath: /config
        size: 1Gi
      incomplete:
        enabled: true
        storageClass: zfs-nfs
        accessMode: ReadWriteOnce
        mountPath: /incomplete
        size: 200Gi
      tv:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/tv
            server: ${NFS_SERVER}
        mountPath: /tv
      movies:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/movies
            server: ${NFS_SERVER}
        mountPath: /movies
      music:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /warehouse/media/music
            server: ${NFS_SERVER}
        mountPath: /music
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/icon: mdi:download-circle
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
